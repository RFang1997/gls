[comment encoding = UTF-8 /]
[module toTina('http://petrinet')]


[template public toTina(aPetriNet : PetriNet)]
[comment @main/]
[file (aPetriNet.name, false, 'UTF-8')]

net [aPetriNet.name/] 
[for (p : Place | aPetriNet.node -> getPlaces())]
	pl [p.name/] ['('/][p.marking/][')'/]
[/for]
[for (t : Transition | aPetriNet.node -> getTransitions())]
	tr [t.name/] ['['/][t.min_time/],[t.max_time/][']'/] [for (a : Arc | aPetriNet.arc -> getArcs())][if (a.target = t)][a.source.name/]['*'/][a.weight/][/if][/for] -> [for (a : Arc | aPetriNet.arc -> getArcs())][if (a.source = t)][a.target.name/]['*'/][a.weight/][/if][/for] 		 
[/for]


[/file]
[/template]

[query public getPlaces(elements : OrderedSet(Node)) : OrderedSet(Place) = 
	elements->select( e | e.oclIsTypeOf(Place) )
		->collect( e | e.oclAsType(Place) )
		->asOrderedSet()
/]

[query public getTransitions(elements : OrderedSet(Node)) : OrderedSet(Transition) = 
	elements->select( e | e.oclIsTypeOf(Transition) )
		->collect( e | e.oclAsType(Transition) )
		->asOrderedSet()
/]

[query public getArcs(elements : OrderedSet(Arc)) : OrderedSet(Arc) = 
	elements->select( e | e.oclIsTypeOf(Arc) )
		->collect( e | e.oclAsType(Arc) )
		->asOrderedSet()
/]




