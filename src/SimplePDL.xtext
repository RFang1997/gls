// automatically generated by Xtext
grammar fr.n7.simplepdl.txt.PDL with org.eclipse.xtext.common.Terminals

import "http://simplepdl" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Process returns Process:
	{Process}
	'process'
	name=EString
	'{'
		processelement+=ProcessElements (processelement+=ProcessElements)*
	'}';

ProcessElements returns ProcessElements:
	ProcessElements_Impl | WorkDefinition | WorkSequence | Guidance | Ressource;

EString returns ecore::EString:
	STRING | ID;

ProcessElements_Impl returns ProcessElements:
	{ProcessElements}
	'ProcessElements'
	;

WorkDefinition returns WorkDefinition:
	{WorkDefinition}
	'wd'
	name=EString;
	

WorkSequence returns WorkSequence:
	'ws' linkType=WorkSequenceType
	'from' predecessor=[WorkDefinition|EString]
	'to'successor=[WorkDefinition|EString];

Guidance returns Guidance:
	'gd'
		'text' text=EString
		('processelement' processelement=[ProcessElements|EString])?;

Ressource returns Ressource:
	'rs'
	name=EString 'count' count=EInt;

Allocation returns Allocation:
	'alloc'
		'count' count=EInt
		('ressource' ressource=[Ressource|EString])?
		('workdefinition' workdefinition=[WorkDefinition|EString])?;

EInt returns ecore::EInt:
	'-'? INT;

enum WorkSequenceType returns WorkSequenceType:
				startToStart = 's2s' | finishToStart = 'f2s' | startToFinish = 's2f' | finishToFinish = 'f2f';